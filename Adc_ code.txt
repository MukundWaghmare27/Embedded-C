#include "NUC1xx.h"
#include "SYS.h"
#include "GPIO.h"
#include "stdio.h"

int adc_value;
int Vout;
double  adc_out[20];
char voltage_char[10];
float voltage;
void lcd_init(void);
void lcd_cmd(char cmd);
void lcd_data(char data);
void lcd_print(char *str);
char adc_value_char[10];



int main()
{
	UNLOCKREG();
	DrvSYS_Open(50000000);   //for 50MHz
	LOCKREG();
	
	DrvGPIO_Open(E_GPA,0,E_IO_OUTPUT);   //rS
	DrvGPIO_Open(E_GPA,1,E_IO_OUTPUT);   //rW
	DrvGPIO_Open(E_GPA,2,E_IO_OUTPUT);   //en
	
	
	// Giving to data pins of lcd
  DrvGPIO_Open(E_GPE,0,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,1,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,2,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,3,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,4,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,5,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,6,E_IO_OUTPUT);
	DrvGPIO_Open(E_GPE,7,E_IO_OUTPUT);
	
	DrvGPIO_Open(E_GPA,7,E_IO_INPUT);   //Select input pin
  SYSCLK->PWRCON.OSC22M_EN=1;  //internal osscillator 22 MHz enable  
	
	SYSCLK->CLKSEL1.ADC_S=2;    //SELECT FREQUENCY FOR 22MHZ
	SYSCLK->CLKSEL1.ADC_S=1;    // FOR 16 MHZ GIVEN TO ADC i.e 22MHz/2 = 11MHz
	SYSCLK->APBCLK.ADC_EN=1;    //Enable the CLOCK SOURCE
	ADC->ADCR.ADEN=1;           //Enable ADC module
	
	
	// For Operation mode selection
	ADC->ADCR.ADMD=3;
	ADC->ADCHER.CHEN = 0X80;  //select adc channels 0:7
	ADC->ADSR.ADF=1;           // clear the adc interruptd flage
	ADC->ADCR.ADIE=1;
	ADC->ADCR.DMOF=0;						//to select result format  0= in unsigned formate   1= 2' complimate formate
	ADC->ADCR.ADST=1;          //ADC start conversion
	
	
	lcd_init();
	while (1)
	{
		while(ADC->ADSR.ADF==0)   //Waiting till conversion completed
			ADC->ADSR.ADF=1;
	  adc_value = ADC->ADDR[7].RSLT;
		sprintf(adc_value_char,"%u",adc_value);
		voltage=adc_value*0.0008066 * 100;         
		sprintf(voltage_char,"%f",voltage);
		                                     //Vout = adc_out*0.00080566;
		
		
		lcd_cmd(0x80);
		lcd_print("adc value=");
		lcd_print(adc_value_char);
		
		lcd_cmd(0XC0);
		lcd_print("Voltage=");
		lcd_print(voltage_char);
		
		
	}
		
		 return 0;


 }
void lcd_init(void)
{
	   lcd_cmd(0X38);
	   lcd_cmd(0X06);
	   lcd_cmd(0X0E);
	   lcd_cmd(0X01);
	   lcd_cmd(0X80);
}


void lcd_cmd(char cmd)
{
	GPIOE ->DOUT=cmd;
	DrvGPIO_ClrBit(E_GPA,0);  //Rs=0
	DrvGPIO_ClrBit(E_GPA,1);  //Rw=0 
	DrvGPIO_SetBit(E_GPA,2);  //En=1
	DrvSYS_Delay(1000);   
	DrvGPIO_ClrBit(E_GPA,2); //En=0
}


void lcd_data(char data)
{
	GPIOE->DOUT=data;
	DrvGPIO_SetBit(E_GPA,0);  //Rs=1
	DrvGPIO_ClrBit(E_GPA,1);  //Rw=0
	DrvGPIO_SetBit(E_GPA,2);  //En=1
	DrvSYS_Delay(1000);
	DrvGPIO_ClrBit(E_GPA,2); //En=0
}
void lcd_print(char *str)
{
	while(*str !='\0')
	{
		lcd_data(*str);
		str++;
	}
}		 